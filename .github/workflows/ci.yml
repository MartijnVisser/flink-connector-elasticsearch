################################################################################
#  Licensed to the Apache Software Foundation (ASF) under one
#  or more contributor license agreements.  See the NOTICE file
#  distributed with this work for additional information
#  regarding copyright ownership.  The ASF licenses this file
#  to you under the Apache License, Version 2.0 (the
#  "License"); you may not use this file except in compliance
#  with the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
# limitations under the License.
################################################################################

name: Build flink-connector-elasticsearch
on: [push, pull_request]
jobs:
  compile_ci_jdk8:
    runs-on: ubuntu-latest
    env:
      MVN_GOALS: clean install
      MVN_PROFILES: -Pcheck-convergence -Dscala-2.12
      MVN_TEST_OPTIONS: -Dmaven.javadoc.skip=true -DskipTests -Dfast -U -B
#      MVN_COMMON_OPTIONS: -Dflink.forkCount=2 -Dflink.forkCountTestPackage=2
#      Temporary disable convergence phase since that will fail
      MVN_COMMON_OPTIONS: -Dflink.convergence.phase=install -Dflink.forkCount=2 -Dflink.forkCountTestPackage=2
      MVN_CONNECTION_OPTIONS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Set JDK
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'

      - name: Set Maven 3.2.5
        uses: stCarolas/setup-maven@v4.2
        with:
          maven-version: 3.2.5

      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Compile flink-connector-elasticsearch
        run: mvn ${{ env.MVN_GOALS }} ${{ env.MVN_PROFILES }} ${{ env.MVN_TEST_OPTIONS }} ${{ env.MVN_COMMON_OPTIONS }} ${{ env.MVN_CONNECTION_OPTIONS }}

  test_ci_jdk8:
    needs: compile_ci_jdk8
    runs-on: ubuntu-latest
    env:
      MVN_GOALS: clean install
      MVN_PROFILES: -Dscala-2.12
      MVN_TEST_OPTIONS: -B --no-snapshot-updates
      MVN_COMMON_OPTIONS: -Dflink.forkCount=2 -Dflink.forkCountTestPackage=2
      MVN_CONNECTION_OPTIONS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Test - connectors
        run: mvn ${{ env.MVN_GOALS }} ${{ env.MVN_PROFILES }} ${{ env.MVN_TEST_OPTIONS }} ${{ env.MVN_COMMON_OPTIONS }} ${{ env.MVN_CONNECTION_OPTIONS }}

  compile_ci_jdk11:
    runs-on: ubuntu-latest
    env:
      MVN_GOALS: clean install
      MVN_PROFILES: -Pcheck-convergence -Dscala-2.12
      MVN_TEST_OPTIONS: -Dmaven.javadoc.skip=true -DskipTests -Dfast -U -B
      MVN_COMMON_OPTIONS: -Dflink.forkCount=2 -Dflink.forkCountTestPackage=2
      #      Temporary disable convergence phase since that will fail
      #      MVN_COMMON_OPTIONS: -Dflink.convergence.phase=install -Dflink.forkCount=2 -Dflink.forkCountTestPackage=2
      MVN_CONNECTION_OPTIONS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Set JDK
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Set Maven 3.2.5
        uses: stCarolas/setup-maven@v4.2
        with:
          maven-version: 3.2.5

      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Compile flink-connector-elasticsearch
        run: mvn ${{ env.MVN_GOALS }} ${{ env.MVN_PROFILES }} ${{ env.MVN_TEST_OPTIONS }} ${{ env.MVN_COMMON_OPTIONS }} ${{ env.MVN_CONNECTION_OPTIONS }}

  test_ci_jdk11:
    needs: compile_ci_jdk11
    runs-on: ubuntu-latest
    env:
      MVN_GOALS: clean install
      MVN_PROFILES: -Dscala-2.12
      MVN_TEST_OPTIONS: -B --no-snapshot-updates
      MVN_COMMON_OPTIONS: -Dflink.forkCount=2 -Dflink.forkCountTestPackage=2
      MVN_CONNECTION_OPTIONS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Test - connectors
        run: mvn ${{ env.MVN_GOALS }} ${{ env.MVN_PROFILES }} ${{ env.MVN_TEST_OPTIONS }} ${{ env.MVN_COMMON_OPTIONS }} ${{ env.MVN_CONNECTION_OPTIONS }}
